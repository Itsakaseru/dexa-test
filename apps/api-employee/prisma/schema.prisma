generator client {
  provider = "prisma-client-js"
  output   = "../prisma/generated"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Department {
  id              Int               @id @unique(map: "id") @default(autoincrement())
  name            String            @db.Text
  Employee        Employee[]
  EmployeeHistory EmployeeHistory[]
}

model Employee {
  id           Int        @id @unique(map: "id") @default(autoincrement())
  userId       Int        @unique(map: "userId")
  name         String     @db.Text
  gender       String     @db.VarChar(1)
  dob          DateTime   @db.DateTime(0)
  departmentId Int
  positionId   Int
  createdAt    DateTime   @db.Timestamp(0)
  updatedAt    DateTime   @db.Timestamp(0)
  Department   Department @relation(fields: [departmentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Employee_ibfk_1")
  Position     Position   @relation(fields: [positionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Employee_ibfk_2")

  @@index([departmentId], map: "departmentId")
  @@index([positionId], map: "positionId")
}

model EmployeeHistory {
  id           Int        @id @unique(map: "id") @default(autoincrement())
  userId       Int        @unique(map: "userId")
  name         String     @db.Text
  gender       String     @db.VarChar(1)
  dob          DateTime   @db.DateTime(0)
  departmentId Int
  positionId   Int
  createdAt    DateTime   @db.Timestamp(0)
  Department   Department @relation(fields: [departmentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "EmployeeHistory_ibfk_1")

  @@index([departmentId], map: "departmentId")
}

model Position {
  id       Int        @id @unique(map: "id") @default(autoincrement())
  name     String     @db.Text
  Employee Employee[]
}
